{
	"scope": "source.js,source.js.embedded.html,source.coffee,source.ts",
	"version": "r55",
	"completions":
	[
		{ "trigger": "THREE.extend", "contents": "THREE.extend( ${1:obj}, ${2:source} )$0" },
		{ "trigger": "THREE.Color", "contents": "THREE.Color( ${1:value} )$0" },
		{ "trigger": "THREE.Quaternion", "contents": "THREE.Quaternion( ${1:x}, ${2:y}, ${3:z}, ${4:w} )$0" },
		{ "trigger": "THREE.Vector2", "contents": "THREE.Vector2( ${1:x}, ${2:y} )$0" },
		{ "trigger": "THREE.Vector3", "contents": "THREE.Vector3( ${1:x}, ${2:y}, ${3:z} )$0" },
		{ "trigger": "THREE.Vector4", "contents": "THREE.Vector4( ${1:x}, ${2:y}, ${3:z}, ${4:w} )$0" },
		{ "trigger": "THREE.Euler", "contents": "THREE.Euler( ${1:x}, ${2:y}, ${3:z}, ${4:order} )$0" },
		{ "trigger": "THREE.Line3", "contents": "THREE.Line3( ${1:start}, ${2:end} )$0" },
		{ "trigger": "THREE.Box2", "contents": "THREE.Box2( ${1:min}, ${2:max} )$0" },
		{ "trigger": "THREE.Box3", "contents": "THREE.Box3( ${1:min}, ${2:max} )$0" },
		{ "trigger": "THREE.Matrix3", "contents": "THREE.Matrix3( ${1:n11}, ${2:n12}, ${3:n13}, ${4:n21}, ${5:n22}, ${6:n23}, ${7:n31}, ${8:n32}, ${9:n33} )$0" },
		{ "trigger": "THREE.Matrix4", "contents": "THREE.Matrix4( ${1:n11}, ${2:n12}, ${3:n13}, ${4:n14}, ${5:n21}, ${6:n22}, ${7:n23}, ${8:n24}, ${9:n31}, ${10:n32}, ${11:n33}, ${12:n34}, ${13:n41}, ${14:n42}, ${15:n43}, ${16:n44} )$0" },
		{ "trigger": "THREE.Ray", "contents": "THREE.Ray( ${1:origin}, ${2:direction} )$0" },
		{ "trigger": "THREE.Sphere", "contents": "THREE.Sphere( ${1:center}, ${2:radius} )$0" },
		{ "trigger": "THREE.Frustum", "contents": "THREE.Frustum( ${1:p0}, ${2:p1}, ${3:p2}, ${4:p3}, ${5:p4}, ${6:p5} )$0" },
		{ "trigger": "THREE.Plane", "contents": "THREE.Plane( ${1:normal}, ${2:constant} )$0" },
		{ "trigger": "THREE.Spline", "contents": "THREE.Spline( ${1:points} )$0" },
		{ "trigger": "THREE.Triangle", "contents": "THREE.Triangle( ${1:a}, ${2:b}, ${3:c} )$0" },
		{ "trigger": "THREE.Vertex", "contents": "THREE.Vertex( ${1:v} )$0" },
		{ "trigger": "THREE.UV", "contents": "THREE.UV( ${1:u}, ${2:v} )$0" },
		{ "trigger": "THREE.Clock", "contents": "THREE.Clock( ${1:autoStart} )$0" },
		{ "trigger": "THREE.EventDispatcher", "contents": "THREE.EventDispatcher()$0" },
		{ "trigger": "THREE.Raycaster", "contents": "THREE.Raycaster( ${1:origin}, ${2:direction}, ${3:near}, ${4:far} )$0" },
		{ "trigger": "THREE.Object3D", "contents": "THREE.Object3D()$0" },
		{ "trigger": "THREE.Projector", "contents": "THREE.Projector()$0" },
		{ "trigger": "THREE.Face3", "contents": "THREE.Face3( ${1:a}, ${2:b}, ${3:c}, ${4:normal}, ${5:color}, ${6:materialIndex} )$0" },
		{ "trigger": "THREE.Face4", "contents": "THREE.Face4( ${1:a}, ${2:b}, ${3:c}, ${4:d}, ${5:normal}, ${6:color}, ${7:materialIndex} )$0" },
		{ "trigger": "THREE.Geometry", "contents": "THREE.Geometry()$0" },
		{ "trigger": "THREE.BufferGeometry", "contents": "THREE.BufferGeometry()$0" },
		{ "trigger": "THREE.Camera", "contents": "THREE.Camera()$0" },
		{ "trigger": "THREE.OrthographicCamera", "contents": "THREE.OrthographicCamera( ${1:left}, ${2:right}, ${3:top}, ${4:bottom}, ${5:near}, ${6:far} )$0" },
		{ "trigger": "THREE.PerspectiveCamera", "contents": "THREE.PerspectiveCamera( ${1:fov}, ${2:aspect}, ${3:near}, ${4:far} )$0" },
		{ "trigger": "THREE.Light", "contents": "THREE.Light( ${1:hex} )$0" },
		{ "trigger": "THREE.AmbientLight", "contents": "THREE.AmbientLight( ${1:hex} )$0" },
		{ "trigger": "THREE.AreaLight", "contents": "THREE.AreaLight( ${1:hex}, ${2:intensity} )$0" },
		{ "trigger": "THREE.DirectionalLight", "contents": "THREE.DirectionalLight( ${1:hex}, ${2:intensity} )$0" },
		{ "trigger": "THREE.HemisphereLight", "contents": "THREE.HemisphereLight( ${1:skyColorHex}, ${2:groundColorHex}, ${3:intensity} )$0" },
		{ "trigger": "THREE.PointLight", "contents": "THREE.PointLight( ${1:hex}, ${2:intensity}, ${3:distance} )$0" },
		{ "trigger": "THREE.SpotLight", "contents": "THREE.SpotLight( ${1:hex}, ${2:intensity}, ${3:distance}, ${4:angle}, ${5:exponent} )$0" },
		{ "trigger": "THREE.Loader", "contents": "THREE.Loader( ${1:showStatus} )$0" },
		{ "trigger": "THREE.XHRLoader", "contents": "THREE.XHRLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.ImageLoader", "contents": "THREE.ImageLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.JSONLoader", "contents": "THREE.JSONLoader( ${1:showStatus} )$0" },
		{ "trigger": "THREE.LoadingManager", "contents": "THREE.LoadingManager( ${1:onLoad}, ${2:onProgress}, ${3:onError} )$0" },
		{ "trigger": "THREE.BufferGeometryLoader", "contents": "THREE.BufferGeometryLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.GeometryLoader", "contents": "THREE.GeometryLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.MaterialLoader", "contents": "THREE.MaterialLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.ObjectLoader", "contents": "THREE.ObjectLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.SceneLoader", "contents": "THREE.SceneLoader()$0" },
		{ "trigger": "THREE.TextureLoader", "contents": "THREE.TextureLoader( ${1:manager} )$0" },
		{ "trigger": "THREE.Material", "contents": "THREE.Material()$0" },
		{ "trigger": "THREE.LineBasicMaterial", "contents": "THREE.LineBasicMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.LineDashedMaterial", "contents": "THREE.LineDashedMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshBasicMaterial", "contents": "THREE.MeshBasicMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshLambertMaterial", "contents": "THREE.MeshLambertMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshPhongMaterial", "contents": "THREE.MeshPhongMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshDepthMaterial", "contents": "THREE.MeshDepthMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshNormalMaterial", "contents": "THREE.MeshNormalMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.MeshFaceMaterial", "contents": "THREE.MeshFaceMaterial( ${1:materials} )$0" },
		{ "trigger": "THREE.ParticleBasicMaterial", "contents": "THREE.ParticleBasicMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.ParticleCanvasMaterial", "contents": "THREE.ParticleCanvasMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.ShaderMaterial", "contents": "THREE.ShaderMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.SpriteMaterial", "contents": "THREE.SpriteMaterial( ${1:parameters} )$0" },
		{ "trigger": "THREE.Texture", "contents": "THREE.Texture( ${1:image}, ${2:mapping}, ${3:wrapS}, ${4:wrapT}, ${5:magFilter}, ${6:minFilter}, ${7:format}, ${8:type}, ${9:anisotropy} )$0" },
		{ "trigger": "THREE.CompressedTexture", "contents": "THREE.CompressedTexture( ${1:mipmaps}, ${2:width}, ${3:height}, ${4:format}, ${5:type}, ${6:mapping}, ${7:wrapS}, ${8:wrapT}, ${9:magFilter}, ${10:minFilter}, ${11:anisotropy} )$0" },
		{ "trigger": "THREE.DataTexture", "contents": "THREE.DataTexture( ${1:data}, ${2:width}, ${3:height}, ${4:format}, ${5:type}, ${6:mapping}, ${7:wrapS}, ${8:wrapT}, ${9:magFilter}, ${10:minFilter}, ${11:anisotropy} )$0" },
		{ "trigger": "THREE.Particle", "contents": "THREE.Particle( ${1:material} )$0" },
		{ "trigger": "THREE.ParticleSystem", "contents": "THREE.ParticleSystem( ${1:geometry}, ${2:material} )$0" },
		{ "trigger": "THREE.Line", "contents": "THREE.Line( ${1:geometry}, ${2:material}, ${3:type} )$0" },
		{ "trigger": "THREE.Mesh", "contents": "THREE.Mesh( ${1:geometry}, ${2:material} )$0" },
		{ "trigger": "THREE.SkinnedMesh", "contents": "THREE.SkinnedMesh( ${1:geometry}, ${2:material}, ${3:useVertexTexture} )$0" },
		{ "trigger": "THREE.MorphAnimMesh", "contents": "THREE.MorphAnimMesh( ${1:geometry}, ${2:material} )$0" },
		{ "trigger": "THREE.LOD", "contents": "THREE.LOD()$0" },
		{ "trigger": "THREE.Sprite", "contents": "THREE.Sprite( ${1:material} )$0" },
		{ "trigger": "THREE.Scene", "contents": "THREE.Scene()$0" },
		{ "trigger": "THREE.Fog", "contents": "THREE.Fog( ${1:hex}, ${2:near}, ${3:far} )$0" },
		{ "trigger": "THREE.FogExp2", "contents": "THREE.FogExp2( ${1:hex}, ${2:density} )$0" },
		{ "trigger": "THREE.CanvasRenderer", "contents": "THREE.CanvasRenderer( ${1:parameters} )$0" },
		{ "trigger": "THREE.WebGLRenderer", "contents": "THREE.WebGLRenderer( ${1:parameters} )$0" },
		{ "trigger": "THREE.WebGLRenderTarget", "contents": "THREE.WebGLRenderTarget( ${1:width}, ${2:height}, ${3:options} )$0" },
		{ "trigger": "THREE.WebGLRenderTargetCube", "contents": "THREE.WebGLRenderTargetCube( ${1:width}, ${2:height}, ${3:options} )$0" },
		{ "trigger": "THREE.RenderableVertex", "contents": "THREE.RenderableVertex()$0" },
		{ "trigger": "THREE.RenderableFace3", "contents": "THREE.RenderableFace3()$0" },
		{ "trigger": "THREE.RenderableObject", "contents": "THREE.RenderableObject()$0" },
		{ "trigger": "THREE.RenderableParticle", "contents": "THREE.RenderableParticle()$0" },
		{ "trigger": "THREE.RenderableLine", "contents": "THREE.RenderableLine()$0" },
		{ "trigger": "THREE.Curve", "contents": "THREE.Curve()$0" },
		{ "trigger": "THREE.CurvePath", "contents": "THREE.CurvePath()$0" },
		{ "trigger": "THREE.Gyroscope", "contents": "THREE.Gyroscope()$0" },
		{ "trigger": "THREE.Path", "contents": "THREE.Path( ${1:points} )$0" },
		{ "trigger": "THREE.Shape", "contents": "THREE.Shape()$0" },
		{ "trigger": "THREE.LineCurve", "contents": "THREE.LineCurve( ${1:v1}, ${2:v2} )$0" },
		{ "trigger": "THREE.QuadraticBezierCurve", "contents": "THREE.QuadraticBezierCurve( ${1:v0}, ${2:v1}, ${3:v2} )$0" },
		{ "trigger": "THREE.CubicBezierCurve", "contents": "THREE.CubicBezierCurve( ${1:v0}, ${2:v1}, ${3:v2}, ${4:v3} )$0" },
		{ "trigger": "THREE.ArcCurve", "contents": "THREE.ArcCurve( ${1:aX}, ${2:aY}, ${3:aRadius}, ${4:aStartAngle}, ${5:aEndAngle}, ${6:aClockwise} )$0" },
		{ "trigger": "THREE.Animation", "contents": "THREE.Animation( ${1:root}, ${2:name}, ${3:interpolationType} )$0" },
		{ "trigger": "THREE.CubeCamera", "contents": "THREE.CubeCamera( ${1:near}, ${2:far}, ${3:cubeResolution} )$0" },
		{ "trigger": "THREE.CombinedCamera", "contents": "THREE.CombinedCamera( ${1:width}, ${2:height}, ${3:fov}, ${4:near}, ${5:far}, ${6:orthoNear}, ${7:orthoFar} )$0" },
		{ "trigger": "THREE.CircleGeometry", "contents": "THREE.CircleGeometry( ${1:radius}, ${2:segments}, ${3:thetaStart}, ${4:thetaLength} )$0" },
		{ "trigger": "THREE.CubeGeometry", "contents": "THREE.CubeGeometry( ${1:width}, ${2:height}, ${3:depth}, ${4:widthSegments}, ${5:heightSegments}, ${6:depthSegments} )$0" },
		{ "trigger": "THREE.CylinderGeometry", "contents": "THREE.CylinderGeometry( ${1:radiusTop}, ${2:radiusBottom}, ${3:height}, ${4:radialSegments}, ${5:heightSegments}, ${6:openEnded} )$0" },
		{ "trigger": "THREE.ExtrudeGeometry", "contents": "THREE.ExtrudeGeometry( ${1:shapes}, ${2:options} )$0" },
		{ "trigger": "THREE.ShapeGeometry", "contents": "THREE.ShapeGeometry( ${1:shapes}, ${2:options} )$0" },
		{ "trigger": "THREE.LatheGeometry", "contents": "THREE.LatheGeometry( ${1:points}, ${2:segments}, ${3:phiStart}, ${4:phiLength} )$0" },
		{ "trigger": "THREE.PlaneGeometry", "contents": "THREE.PlaneGeometry( ${1:width}, ${2:height}, ${3:widthSegments}, ${4:heightSegments} )$0" },
		{ "trigger": "THREE.RingGeometry", "contents": "THREE.RingGeometry( ${1:innerRadius}, ${2:outerRadius}, ${3:thetaSegments}, ${4:phiSegments}, ${5:thetaStart}, ${6:thetaLength} )$0" },
		{ "trigger": "THREE.SphereGeometry", "contents": "THREE.SphereGeometry( ${1:radius}, ${2:widthSegments}, ${3:heightSegments}, ${4:phiStart}, ${5:phiLength}, ${6:thetaStart}, ${7:thetaLength} )$0" },
		{ "trigger": "THREE.TextGeometry", "contents": "THREE.TextGeometry( ${1:text}, ${2:parameters} )$0" },
		{ "trigger": "THREE.TorusGeometry", "contents": "THREE.TorusGeometry( ${1:radius}, ${2:tube}, ${3:radialSegments}, ${4:tubularSegments}, ${5:arc} )$0" },
		{ "trigger": "THREE.TorusKnotGeometry", "contents": "THREE.TorusKnotGeometry( ${1:radius}, ${2:tube}, ${3:radialSegments}, ${4:tubularSegments}, ${5:p}, ${6:q}, ${7:heightScale} )$0" },
		{ "trigger": "THREE.PolyhedronGeometry", "contents": "THREE.PolyhedronGeometry( ${1:vertices}, ${2:faces}, ${3:radius}, ${4:detail} )$0" },
		{ "trigger": "THREE.IcosahedronGeometry", "contents": "THREE.IcosahedronGeometry( ${1:radius}, ${2:detail} )$0" },
		{ "trigger": "THREE.OctahedronGeometry", "contents": "THREE.OctahedronGeometry( ${1:radius}, ${2:detail} )$0" },
		{ "trigger": "THREE.TetrahedronGeometry", "contents": "THREE.TetrahedronGeometry( ${1:radius}, ${2:detail} )$0" },
		{ "trigger": "THREE.ParametricGeometry", "contents": "THREE.ParametricGeometry( ${1:func}, ${2:slices}, ${3:stacks} )$0" },
		{ "trigger": "THREE.AxisHelper", "contents": "THREE.AxisHelper( ${1:size} )$0" },
		{ "trigger": "THREE.ArrowHelper", "contents": "THREE.ArrowHelper( ${1:dir}, ${2:origin}, ${3:length}, ${4:hex} )$0" },
		{ "trigger": "THREE.BoxHelper", "contents": "THREE.BoxHelper( ${1:object} )$0" },
		{ "trigger": "THREE.BoundingBoxHelper", "contents": "THREE.BoundingBoxHelper( ${1:object}, ${2:hex} )$0" },
		{ "trigger": "THREE.CameraHelper", "contents": "THREE.CameraHelper( ${1:camera} )$0" },
		{ "trigger": "THREE.DirectionalLightHelper", "contents": "THREE.DirectionalLightHelper( ${1:light}, ${2:size} )$0" },
		{ "trigger": "THREE.FaceNormalsHelper", "contents": "THREE.FaceNormalsHelper( ${1:object}, ${2:size}, ${3:hex}, ${4:linewidth} )$0" },
		{ "trigger": "THREE.GridHelper", "contents": "THREE.GridHelper( ${1:size}, ${2:step} )$0" },
		{ "trigger": "THREE.HemisphereLightHelper", "contents": "THREE.HemisphereLightHelper( ${1:light}, ${2:sphereSize}, ${3:arrowLength}, ${4:domeSize} )$0" },
		{ "trigger": "THREE.PointLightHelper", "contents": "THREE.PointLightHelper( ${1:light}, ${2:sphereSize} )$0" },
		{ "trigger": "THREE.SpotLightHelper", "contents": "THREE.SpotLightHelper( ${1:light} )$0" },
		{ "trigger": "THREE.VertexNormalsHelper", "contents": "THREE.VertexNormalsHelper( ${1:object}, ${2:size}, ${3:hex}, ${4:linewidth} )$0" },
		{ "trigger": "THREE.VertexTangentsHelper", "contents": "THREE.VertexTangentsHelper( ${1:object}, ${2:size}, ${3:hex}, ${4:linewidth} )$0" },
		{ "trigger": "THREE.WireframeHelper", "contents": "THREE.WireframeHelper( ${1:object} )$0" },
		{ "trigger": "THREE.ImmediateRenderObject", "contents": "THREE.ImmediateRenderObject()$0" },
		{ "trigger": "THREE.LensFlare", "contents": "THREE.LensFlare( ${1:texture}, ${2:size}, ${3:distance}, ${4:blending}, ${5:color} )$0" },
		{ "trigger": "THREE.LensFlarePlugin", "contents": "THREE.LensFlarePlugin()$0" },
		{ "trigger": "THREE.ShadowMapPlugin", "contents": "THREE.ShadowMapPlugin()$0" },
		{ "trigger": "THREE.SpritePlugin", "contents": "THREE.SpritePlugin()$0" },
		{ "trigger": "THREE.DepthPassPlugin", "contents": "THREE.DepthPassPlugin()$0" },
		"THREE"
	]
}
